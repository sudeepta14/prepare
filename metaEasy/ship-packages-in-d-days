class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int left = getMax(weights);
        int right = getSum(weights);

        while(left < right){
            int mid = left + (right - left)/2;
            if(meetsCapacity(weights, mid) > days){
                left = mid+1;
            }else{
                right = mid;
            }
        }
        return left;
    }

    public int meetsCapacity(int[] weights, int capacity){
        int total = 0;
        int days = 1;
        for(int weight: weights){
            total += weight;
            if(total > capacity){
                days++;
                total = weight;
            }
        }
        return days;
    }

    public int getSum(int[] weights){
        int total = 0;
        for(int weight: weights){
            total += weight;
        }
        return total;
    }

    public int getMax(int[] weights){
        int max = 0;
        for(int weight: weights){
            max = Math.max(max, weight);
        }
        return max;
    }
}
